[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "nitor-vault"
requires-python = ">=3.11"
description = "Vault for storing locally encrypted data in S3 using KMS keys"
readme = "README.md"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
authors = [
    { name = "Pasi Niemi", email = "pasi@nitor.com" },
    { name = "Akseli Lukkarila", email = "akseli.lukkarila@nitor.com" },
]
dynamic = ["version"]
dependencies = ["typer"]

[project.optional-dependencies]
dev = ["ruff", "maturin"]

[project.urls]
Repository = "https://github.com/NitorCreations/vault"

[project.scripts]
vault = "n_vault.vault:app"

[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python"
module-name = "n_vault.nitor_vault"

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
include = ["*.py", "*.pyi", "**/pyproject.toml"]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = ["E4", "E7", "E9", "F", "W", "N", "UP", "I"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv*",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv*",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
# https://docs.astral.sh/ruff/settings/#isort
combine-as-imports = true
lines-between-types = 1
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
