name: Rust

# Run either when pushing directly to main/master or in a PR targeting main/master
on:
  push:
    branches:
      - master
      - main
    paths:
      - "**.rs"
      - "rust/Cargo.lock"
      - "rust/Cargo.toml"
      - ".github/workflows/cargo.yml"
  pull_request:
    branches:
      - master
      - main

env:
  CARGO_TERM_COLOR: always

# https://github.com/actions-rs/cargo
jobs:
  cargo:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          workspaces: ./rust -> target

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build
        working-directory: rust
        run: cargo build

      - name: Check formatting
        working-directory: rust
        run: cargo fmt --check --verbose

      - name: Lint
        working-directory: rust
        # exit non-zero if there are any warnings
        # https://doc.rust-lang.org/stable/clippy/usage.html
        run: cargo clippy -- -Dwarnings

      - name: Audit dependencies for security vulnerabilities
        run: cargo audit
