name: Rust

on:
  push:
    branches:
      - master
      - main
    paths:
      - ".github/workflows/rust.yml"
      - "**.rs"
      - "Cargo.lock"
      - "Cargo.toml"
      - "python-pyo3/Cargo.toml"
      - "rust/Cargo.toml"
  pull_request:
    paths:
      - ".github/workflows/rust.yml"
      - "**.rs"
      - "Cargo.lock"
      - "Cargo.toml"
      - "python-pyo3/Cargo.toml"
      - "rust/Cargo.toml"

# Cancel previous runs for PRs but not pushes to main
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - uses: Swatinem/rust-cache@v2.7.5
        with:
          workspaces: ./rust -> target

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test --no-fail-fast

      - name: Lint
        run: cargo clippy -- -Dwarnings

  format:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --check --verbose
